{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ragul\\\\Downloads\\\\crm-dashboard-react-complete-final\\\\src\\\\context\\\\CRMContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { initialData } from '../data/initialData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CRMContext = /*#__PURE__*/createContext();\nexport const useCRM = () => {\n  _s();\n  const context = useContext(CRMContext);\n  if (!context) {\n    throw new Error('useCRM must be used within a CRMProvider');\n  }\n  return context;\n};\n_s(useCRM, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CRMProvider = ({\n  children\n}) => {\n  _s2();\n  const [users, setUsers] = useState(initialData.users);\n  const [leads, setLeads] = useState(initialData.leads);\n  const [activityLogs, setActivityLogs] = useState(initialData.activityLogs);\n  const [currentUser, setCurrentUser] = useState(initialData.users[0]);\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n\n  // Add new lead\n  const addLead = leadData => {\n    const newLead = {\n      id: leads.length + 1,\n      ...leadData,\n      dateCreated: new Date().toISOString(),\n      lastModified: new Date().toISOString(),\n      notes: []\n    };\n    setLeads([...leads, newLead]);\n\n    // Add activity log\n    const activity = {\n      id: activityLogs.length + 1,\n      type: 'lead_created',\n      description: `Lead '${leadData.name}' created and assigned to ${leadData.assignedTo}`,\n      user: currentUser.name,\n      userId: currentUser.id,\n      leadId: newLead.id,\n      timestamp: new Date().toISOString(),\n      details: {\n        leadName: leadData.name,\n        assignedTo: leadData.assignedTo\n      }\n    };\n    setActivityLogs([activity, ...activityLogs]);\n  };\n\n  // Update lead status - UPDATED TO HANDLE FAILURE DETAILS\n  const updateLeadStatus = (leadId, newStatus, quoteAmount = null, failureDetails = null) => {\n    setLeads(leads.map(lead => {\n      if (lead.id === leadId) {\n        const updatedLead = {\n          ...lead,\n          status: newStatus,\n          lastModified: new Date().toISOString()\n        };\n\n        // Handle quote amount\n        if (quoteAmount) {\n          updatedLead.quoteAmount = quoteAmount;\n        }\n\n        // Handle failure details\n        if (newStatus === 'Failed' && failureDetails) {\n          updatedLead.failedReason = failureDetails.reason;\n          updatedLead.failedMessage = failureDetails.message;\n          updatedLead.failedDate = failureDetails.failedDate;\n        }\n\n        // Add activity log\n        const activity = {\n          id: activityLogs.length + 1,\n          type: 'status_change',\n          description: `${lead.name} status changed from '${lead.status}' to '${newStatus}'${failureDetails ? ` - Reason: ${failureDetails.reason}` : ''}`,\n          user: currentUser.name,\n          userId: currentUser.id,\n          leadId: leadId,\n          timestamp: new Date().toISOString(),\n          details: {\n            leadName: lead.name,\n            fromStatus: lead.status,\n            toStatus: newStatus,\n            ...(failureDetails && {\n              failureReason: failureDetails.reason,\n              failureMessage: failureDetails.message\n            })\n          }\n        };\n        setActivityLogs([activity, ...activityLogs]);\n        return updatedLead;\n      }\n      return lead;\n    }));\n  };\n\n  // Add note to lead\n  const addNoteToLead = (leadId, noteText) => {\n    setLeads(leads.map(lead => {\n      if (lead.id === leadId) {\n        const newNote = {\n          id: lead.notes.length + 1,\n          text: noteText,\n          author: currentUser.name,\n          timestamp: new Date().toISOString()\n        };\n\n        // Add activity log\n        const activity = {\n          id: activityLogs.length + 1,\n          type: 'note_added',\n          description: `Note added to ${lead.name}: '${noteText}'`,\n          user: currentUser.name,\n          userId: currentUser.id,\n          leadId: leadId,\n          timestamp: new Date().toISOString(),\n          details: {\n            leadName: lead.name,\n            noteText: noteText\n          }\n        };\n        setActivityLogs([activity, ...activityLogs]);\n        return {\n          ...lead,\n          notes: [...lead.notes, newNote],\n          lastModified: new Date().toISOString()\n        };\n      }\n      return lead;\n    }));\n  };\n\n  // Add new user\n  const addUser = userData => {\n    const newUser = {\n      id: users.length + 1,\n      ...userData,\n      active: true,\n      tasksAssigned: 0,\n      leadsCreated: 0,\n      joinDate: userData.startDate || new Date().toISOString().split('T')[0],\n      lastLogin: null\n    };\n    setUsers([...users, newUser]);\n\n    // Add activity log\n    const activity = {\n      id: activityLogs.length + 1,\n      type: 'user_created',\n      description: `New user '${userData.name}' created with role ${userData.role}`,\n      user: currentUser.name,\n      userId: currentUser.id,\n      timestamp: new Date().toISOString(),\n      details: {\n        userName: userData.name,\n        userRole: userData.role\n      }\n    };\n    setActivityLogs([activity, ...activityLogs]);\n  };\n\n  // Toggle sidebar\n  const toggleSidebar = () => {\n    setSidebarCollapsed(!sidebarCollapsed);\n  };\n\n  // Filter leads by status\n  const getLeadsByStatus = status => {\n    if (Array.isArray(status)) {\n      return leads.filter(lead => status.includes(lead.status));\n    }\n    return leads.filter(lead => lead.status === status);\n  };\n\n  // Filter users by role\n  const getUsersByRole = role => {\n    if (role === 'all') return users;\n    return users.filter(user => user.role === role);\n  };\n  const value = {\n    users,\n    leads,\n    activityLogs,\n    currentUser,\n    sidebarCollapsed,\n    addLead,\n    updateLeadStatus,\n    addNoteToLead,\n    addUser,\n    toggleSidebar,\n    getLeadsByStatus,\n    getUsersByRole,\n    setCurrentUser\n  };\n  return /*#__PURE__*/_jsxDEV(CRMContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s2(CRMProvider, \"70AM/u9r9P5p+Y9mBh7MXwqUmJ0=\");\n_c = CRMProvider;\nvar _c;\n$RefreshReg$(_c, \"CRMProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","initialData","jsxDEV","_jsxDEV","CRMContext","useCRM","_s","context","Error","CRMProvider","children","_s2","users","setUsers","leads","setLeads","activityLogs","setActivityLogs","currentUser","setCurrentUser","sidebarCollapsed","setSidebarCollapsed","addLead","leadData","newLead","id","length","dateCreated","Date","toISOString","lastModified","notes","activity","type","description","name","assignedTo","user","userId","leadId","timestamp","details","leadName","updateLeadStatus","newStatus","quoteAmount","failureDetails","map","lead","updatedLead","status","failedReason","reason","failedMessage","message","failedDate","fromStatus","toStatus","failureReason","failureMessage","addNoteToLead","noteText","newNote","text","author","addUser","userData","newUser","active","tasksAssigned","leadsCreated","joinDate","startDate","split","lastLogin","role","userName","userRole","toggleSidebar","getLeadsByStatus","Array","isArray","filter","includes","getUsersByRole","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ragul/Downloads/crm-dashboard-react-complete-final/src/context/CRMContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { initialData } from '../data/initialData';\n\nconst CRMContext = createContext();\n\nexport const useCRM = () => {\n  const context = useContext(CRMContext);\n  if (!context) {\n    throw new Error('useCRM must be used within a CRMProvider');\n  }\n  return context;\n};\n\nexport const CRMProvider = ({ children }) => {\n  const [users, setUsers] = useState(initialData.users);\n  const [leads, setLeads] = useState(initialData.leads);\n  const [activityLogs, setActivityLogs] = useState(initialData.activityLogs);\n  const [currentUser, setCurrentUser] = useState(initialData.users[0]);\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n\n  // Add new lead\n  const addLead = (leadData) => {\n    const newLead = {\n      id: leads.length + 1,\n      ...leadData,\n      dateCreated: new Date().toISOString(),\n      lastModified: new Date().toISOString(),\n      notes: []\n    };\n\n    setLeads([...leads, newLead]);\n\n    // Add activity log\n    const activity = {\n      id: activityLogs.length + 1,\n      type: 'lead_created',\n      description: `Lead '${leadData.name}' created and assigned to ${leadData.assignedTo}`,\n      user: currentUser.name,\n      userId: currentUser.id,\n      leadId: newLead.id,\n      timestamp: new Date().toISOString(),\n      details: {\n        leadName: leadData.name,\n        assignedTo: leadData.assignedTo\n      }\n    };\n\n    setActivityLogs([activity, ...activityLogs]);\n  };\n\n  // Update lead status - UPDATED TO HANDLE FAILURE DETAILS\n  const updateLeadStatus = (leadId, newStatus, quoteAmount = null, failureDetails = null) => {\n    setLeads(leads.map(lead => {\n      if (lead.id === leadId) {\n        const updatedLead = {\n          ...lead,\n          status: newStatus,\n          lastModified: new Date().toISOString()\n        };\n\n        // Handle quote amount\n        if (quoteAmount) {\n          updatedLead.quoteAmount = quoteAmount;\n        }\n\n        // Handle failure details\n        if (newStatus === 'Failed' && failureDetails) {\n          updatedLead.failedReason = failureDetails.reason;\n          updatedLead.failedMessage = failureDetails.message;\n          updatedLead.failedDate = failureDetails.failedDate;\n        }\n\n        // Add activity log\n        const activity = {\n          id: activityLogs.length + 1,\n          type: 'status_change',\n          description: `${lead.name} status changed from '${lead.status}' to '${newStatus}'${\n            failureDetails ? ` - Reason: ${failureDetails.reason}` : ''\n          }`,\n          user: currentUser.name,\n          userId: currentUser.id,\n          leadId: leadId,\n          timestamp: new Date().toISOString(),\n          details: {\n            leadName: lead.name,\n            fromStatus: lead.status,\n            toStatus: newStatus,\n            ...(failureDetails && { failureReason: failureDetails.reason, failureMessage: failureDetails.message })\n          }\n        };\n\n        setActivityLogs([activity, ...activityLogs]);\n\n        return updatedLead;\n      }\n      return lead;\n    }));\n  };\n\n  // Add note to lead\n  const addNoteToLead = (leadId, noteText) => {\n    setLeads(leads.map(lead => {\n      if (lead.id === leadId) {\n        const newNote = {\n          id: lead.notes.length + 1,\n          text: noteText,\n          author: currentUser.name,\n          timestamp: new Date().toISOString()\n        };\n\n        // Add activity log\n        const activity = {\n          id: activityLogs.length + 1,\n          type: 'note_added',\n          description: `Note added to ${lead.name}: '${noteText}'`,\n          user: currentUser.name,\n          userId: currentUser.id,\n          leadId: leadId,\n          timestamp: new Date().toISOString(),\n          details: {\n            leadName: lead.name,\n            noteText: noteText\n          }\n        };\n\n        setActivityLogs([activity, ...activityLogs]);\n\n        return {\n          ...lead,\n          notes: [...lead.notes, newNote],\n          lastModified: new Date().toISOString()\n        };\n      }\n      return lead;\n    }));\n  };\n\n  // Add new user\n  const addUser = (userData) => {\n    const newUser = {\n      id: users.length + 1,\n      ...userData,\n      active: true,\n      tasksAssigned: 0,\n      leadsCreated: 0,\n      joinDate: userData.startDate || new Date().toISOString().split('T')[0],\n      lastLogin: null\n    };\n\n    setUsers([...users, newUser]);\n\n    // Add activity log\n    const activity = {\n      id: activityLogs.length + 1,\n      type: 'user_created',\n      description: `New user '${userData.name}' created with role ${userData.role}`,\n      user: currentUser.name,\n      userId: currentUser.id,\n      timestamp: new Date().toISOString(),\n      details: {\n        userName: userData.name,\n        userRole: userData.role\n      }\n    };\n\n    setActivityLogs([activity, ...activityLogs]);\n  };\n\n  // Toggle sidebar\n  const toggleSidebar = () => {\n    setSidebarCollapsed(!sidebarCollapsed);\n  };\n\n  // Filter leads by status\n  const getLeadsByStatus = (status) => {\n    if (Array.isArray(status)) {\n      return leads.filter(lead => status.includes(lead.status));\n    }\n    return leads.filter(lead => lead.status === status);\n  };\n\n  // Filter users by role\n  const getUsersByRole = (role) => {\n    if (role === 'all') return users;\n    return users.filter(user => user.role === role);\n  };\n\n  const value = {\n    users,\n    leads,\n    activityLogs,\n    currentUser,\n    sidebarCollapsed,\n    addLead,\n    updateLeadStatus,\n    addNoteToLead,\n    addUser,\n    toggleSidebar,\n    getLeadsByStatus,\n    getUsersByRole,\n    setCurrentUser\n  };\n\n  return (\n    <CRMContext.Provider value={value}>\n      {children}\n    </CRMContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}